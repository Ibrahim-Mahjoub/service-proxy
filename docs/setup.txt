This document is an overview of the setup procedure for the service-proxy application.

General Setup:

 * Overview *
 This application runs on python 3.7.4 and uses postgresql 10. The remaining requirements are in src/requirements.txt.

 * Webserver *
 In order to host this project in a production setting, you will need a webserver. The following is what was placed in apache's config file to setup an instance of this project:

 Alias /*Site Prefix*/static *Path to Project Folder*/src/sp-django/static
 <Directory *Path to Project Folder*/src/sp-django/static >
     Require all granted
 </Directory>

 <Directory <Path to Project Folder>/src/sp-django>
     <Files wsgi.py>
         Require all granted
     </Files>
 </Directory>

 WSGIDaemonProcess proxy_*Site Prefix* python-home=*Path to VirtualEnv* python-path=*Path to Project Folder*/src/sp-django
 WSGIProcessGroup proxy_*Site Prefix*
 WSGIScriptAlias /*Site Prefix* *Path to Project Folder*/src/sp-django/service_proxy/wsgi.py process-group=proxy_*Site Prefix* application-group=%{GLOBAL}

 * Settings  *
 To configure project settings, create a local_settings.py file in the main app folder (service_proxy) and override any settings.

 NOTE: Refer to docs/sample_local_settings.py for more details.

 * Logging * 
 If your webserver is running with a user that does not have file creation and write access to the project directory:  
     1. create the log files manually in the absolute path specified in settings.py
     2. create a group and add the webserver user (apache's is www-data) to that group
     3. make it the default group for the log files

 NOTE: Logging uses django's logging features which are configured in the project's settings.py file.

Mask Parser:

 * Command *
 python manage.py createmasks <csv-file-path> (absolute path)

 * Input *
 CSV file path

 * File Format *
 UserId, PseudoId, ServiceName

 * Overview *
 Parses each line of the csv file and retrieves a service object with name, ServiceName, from the database. It then create a mask object with userId, UserId, pseudoId, PseudoId and assigns it to the retrieved service.

 Note:
     - Service objects must be created manually prior to running the createmasks command.

 * Errors *
 Errors are messages written to the command line with (Error) preceeding the message. If an error occurs, the parsing process could not be run.

 * Warnings *
 Warnings are messages written to the command line with (Warning) preceeding the message. If a warning occurs, the specific row could not be processed, although the parsing process continues. Warnings also include the affected row in the message.
